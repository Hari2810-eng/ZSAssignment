1) Write a program to print a letters from the user input character to 'Z' without using 
strings. 
Example 1: input : X
 Output : XYZ 
Example 2: Input : M
 Output : MNOPQRSTUWXYZ


public static void printLetter(char c){
        while(c >= 'A' && c <= 'Z'){
            System.out.print(c);
            c++;
        }
    }

--------------------------------------------------------------------------------------
2) Write a program to define the functionality of a Bitwise operators.
public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int choice;
        
        do {
            System.out.println("\nMenu:");
            System.out.println("1. Bitwise AND");
            System.out.println("2. Bitwise OR");
            System.out.println("3. Bitwise XOR");
            System.out.println("4. Bitwise NOT (Complement)");
            System.out.println("5. Left Shift");
            System.out.println("6. Right Shift");
            System.out.println("7. Exit");
            System.out.print("Enter your choice: ");
            choice = scanner.nextInt();
            
            if (choice >= 1 && choice <= 7) {
                System.out.print("Enter first integer: ");
                int num1 = scanner.nextInt();
                int num2 = 0;
                
                if (choice != 4) { 
                    System.out.print("Enter second integer: ");
                    num2 = scanner.nextInt();
                }
                switch (choice) {
                    case 1:
                        System.out.println("Bitwise AND: " + (num1 & num2));
                        break;
                    case 2:
                        System.out.println("Bitwise OR: " + (num1 | num2));
                        break;
                    case 3:
                        System.out.println("Bitwise XOR: " + (num1 ^ num2));
                        break;
                    case 4:
                        System.out.println("Bitwise NOT : " + (~num1));
                        break;
                    case 5:
                        System.out.println("Left Shift : " + (num1 << num2));
                        break;
                    case 6:
                        System.out.println("Right Shift : " + (num1 >> num2));
                        break;
                }
            } else if (choice != 7) {
                System.out.println("Invalid choice. Please enter a number between 1 and 8.");
            }
        } while (choice != 7);

    }
----------------------------------------------------------------------------------------------
3)  Write a program for the following. Let consider 20 students in a class with the roll no 
101-120. We are going to split them into four groups. Based on their roll number we are 
going to split them with the following logics. 

public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.println("Total Number of students:");
        int studCount=sc.nextInt();
        for(int i=1; i<studCount/4; i++){
            System.out.println("Group "+i);
            for(int j=100+i; j<=100+studCount; j+=4)
                System.out.println(j);
        }
    }

----------------------------------------------------------------------------------------------
4) Write a program to print the number 7.50 without using String(print 7.50 not 7.5).
public static void main(String[] args) {
        double number = 7.50;
        System.out.printf("%.2f%n", number);
    }
----------------------------------------------------------------------------------------------
5)  Write a program to evaluate the polynomial equation 
public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.println("Enter the a value:");
        double a = sc.nextDouble();
        System.out.println("Enter the b value:");
        double b =sc.nextDouble();
        System.out.println("Enter the c value:");
        double c = sc.nextDouble();
        
        double insideRoot = b*b - 4*a*c;
        System.out.println("Root 1: " + insideRoot);
        if(insideRoot > 0){
            double root1 = (-b + Math.sqrt(insideRoot)) / (2 * a);
            double root2 = (-b - Math.sqrt(insideRoot)) / (2 * a);
            System.out.println("The equation has two real and distinct roots:");
            System.out.println("Root 1: " + root1);
            System.out.println("Root 2: " + root2);
        } else if (insideRoot == 0){
            double root = -b / (2*a);
            System.out.println("The equation has two equal roots:");
            System.out.println("Root: " + root);
        } else {
            double realPart = -b / (2 * a);
            double imaginaryPart = Math.sqrt(-insideRoot) / (2 * a);
            System.out.println("The equation has two complex roots:");
            System.out.println("Root 1: " + realPart + " + " + imaginaryPart + "i");
            System.out.println("Root 2: " + realPart + " - " + imaginaryPart + "i");
      
        }
            
    }
----------------------------------------------------------------------------------------------
6)  Evaluate the following expression on paper and on program and understand the 
difference 
i)++a-b–                   ii)a%b++    iii)a*=b+5               iv)x=69>>>2

public static void main(String[] args) {
        
        Scanner sc=new Scanner(System.in);
        System.out.print("Enter the initial value of a: ");
        int a = sc.nextInt();
        System.out.print("Enter the initial value of b: ");
        int b = sc.nextInt();
        
        int inia = a;
        int inib = b;
        int result=++a - b--;
        System.out.println("1. ++a-b-- :" + result);
        System.out.println("1. a :" + a + "b: " + b);
        
        a=inia;
        b=inib;
        result=a % b++;
        System.out.println("2. a % b++:" + result);
        System.out.println("2. a :" + a + "b: " + b);
        
        a=inia;
        b=inib;
        a *= b + 5;
        System.out.println("3. a *= b + 5:" + a);
        
        
        result=a >>> b;
        System.out.println("1. a :" + a + "b: " + b);
        System.out.println("4. x = a >>> b:" + result);
    }
----------------------------------------------------------------------------------------------
7) Evaluate the following expression on paper and on program and understand the 
difference 
a+=a++ + ++a + –a + a–; when a=28

public static void main(String[] args) {
        int a = 28;

        a += a++ + ++a + -a + a--;

        System.out.println("Final value of a: " + a);
    }
----------------------------------------------------------------------------------------------
8)Program to Find ASCII Value of a Character 
 public static void main(String[] args) {
        Scanner sc =new Scanner(System.in);
        System.out.print("Enter a character: ");
        char character = sc.next().charAt(0);
        int ascii = (int) character;
        System.out.println("ASCII value of "+character+" is " + ascii);
    }
----------------------------------------------------------------------------------------------
9)Write a program to display the number in reverse order without use of String 
functions. 
Eg 1: Input: 12345 
Output :The number in reverse order is : 54321
public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.print("Enter a number: ");
        int num = sc.nextInt();
        int reverse = 0;
        while(num>0){
            reverse = reverse*10 + (num%10);
            num/=10;
        }
        System.out.println("Reversed number: " + reverse);
    }
----------------------------------------------------------------------------------------------
10) Using Recursion, reverse the string such as 
Eg 1: Input: one two three
 Output: three two one
 Eg 2: Input: I love india
 Output: india love I 

public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.print("Enter a Line: ");
        String line = sc.nextLine();
        String result="";
        int i=line.length()-1;
        int j=i;
        while(i>=0){
            while(i >=0 && line.charAt(i) !=' '){
                i--;
            }
            result+=line.substring(i+1, j+1) + " ";
            j=i-1;
            i=j;
        }
        System.out.println(result);
    }
----------------------------------------------------------------------------------------------
11)Write a program to give the following output for the given input: 
Eg 1: Input: a1b10
 Output: abbbbbbbbbb
 Eg: 2: Input: b3c6d15
 Output: bbbccccccddddddddddddddd
 The number varies from 1 to 99.

public static String expandString(String str){
        String result="";
        int i=0;
        while(i < str.length()){
            char c = str.charAt(i);
            i++;
            
            int num=0;
            while(i<str.length() && Character.isDigit(str.charAt(i))){
                num= num*10 + (str.charAt(i) - '0');
                i++;
            }
            for(int j=0; j<num; j++){
                result+=c;
            }
        }
        return result;
    }
----------------------------------------------------------------------------------------------
12) Program to Check Whether a Character is an Alphabet or not 
public static boolean isAlphabet(char ch){
        return (ch >= 'A' && ch <= 'Z') || (ch >= 'a' && ch <= 'z');
    }
----------------------------------------------------------------------------------------------
13) Java Program to print the smallest element in an array 
public static int findSmallest(int[] nums){
        int small = nums[0];
        for(int i=0; i< nums.length; i++){
            small =(small > nums[i])? nums[i] : small;
        }
        return small;
    }
----------------------------------------------------------------------------------------------
14) Java Program to copy all elements of one array into another array
public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int[] arr = new int[]{5, 98, 23, 54, 2};
        int[] arrcopy = new int[arr.length];
        for(int i=0; i<arr.length; i++){
            arrcopy[i] = arr[i];
        }
        for(int num:arrcopy)
            System.out.print(num + " ");
    }

or
public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int[] arr = new int[]{5, 98, 23, 54, 2};
        int[] arrcopy = new int[arr.length];
        System.arraycopy(arr, 0, arrcopy, 0, arrcopy.length);
        for(int num:arrcopy)
            System.out.print(num + " ");
    }
----------------------------------------------------------------------------------------------
15) Java Program to print the duplicate elements of an array
public static Set<Integer> findDuplicates(int[] arr){
        Set<Integer> set = new HashSet<>();
        Set<Integer> duplicates = new HashSet<>();
        for(int num: arr){
            if(!set.add(num)){
                duplicates.add(num);
            }
        }
        return duplicates;
    }

or
public static void findDuplicates(int[] arr1, int[] arr2){
        int[] result=new int[arr1.length + arr2.length];
        int i=0, j=0, k=0;
        while(i<arr1.length && j<arr2.length){
            if(arr1[i] == arr2[j]){
                result[k] = arr1[i];
                i++;
                j++;
            } else if(arr1[i] < arr2[j]){
                if(result[k-1] !=  arr1[i])
                    result[k] = arr1[i];
                i++;
            } else {
                if(result[k-1] !=  arr2[j])
                    result[k] = arr2[j];
                
                j++;
            }
            k++;
        }
        while (i < arr1.length) {
            if (k == 0 || result[k - 1] != arr1[i]) {
                result[k++] = arr1[i];
            }
            i++;
        }

        while (j < arr2.length) {
            if (k == 0 || result[k - 1] != arr2[j]) {
                result[k++] = arr2[j];
            }
            j++;
        }
        for(i=0; i<k; i++){
            System.out.print(result[i] + " ");
        }
    }

----------------------------------------------------------------------------------------------
17) Alternate sorting: Given an array of integers, rearrange the array in such a way that 
the first element is first maximum and second element is first minimum. 
 Example:
 Input : {1, 2, 3, 4, 5, 6, 7}
 Output: {7, 1, 6, 2, 5, 3, 4} 
public static int[] alternateSort(int[] arr1){
        int[] result = new int[arr1.length];
        boolean key= true;
        int i=0, j=arr1.length-1;
        for(int k=0; k<result.length; k++){
            if(key){
                result[k] = arr1[j--];
                key=false;
            } else {
                result[k] = arr1[i++];
                key=true;
            }
        }
        return result;
    }
----------------------------------------------------------------------------------------------
18) Write a program to sort the elements in odd positions in descending order and 
elements in ascending order. 
Eg 1: Input: 13,2 4,15,12,10,5
 
        Output: 13,2,12,10,5,15,4
 Eg 2: Input: 1,2,3,4,5,6,7,8,9
        Output: 9,2,7,4,5,6,3,8,1 

public static int[] alternateSort(int[] arr1){
        int[] result = new int[arr1.length];
        int i=0, j=arr1.length-1;
        for(int k=0; k<result.length; k++){
            if(k%2 ==0){
                result[k] = arr1[j--];
            } else {
                result[k] = arr1[i++];
                
            }
        }
        return result;
    }
----------------------------------------------------------------------------------------------
19)
Original Array:
[1, 2, 3, 4]
[5, 6, 7, 8]
[9, 10, 11, 12]
[13, 14, 15, 16]
Array after left rotation:
[2, 3, 4, 5]
[6, 7, 8, 9]
[10, 11, 12, 13]
[14, 15, 16, 1]

public static void leftRotate(int[][] arr){
        int rows = arr.length;
        int cols = arr[0].length;
        
        int[] firstCol = new int[rows];
        
        for(int i=0; i<rows; i++){
            firstCol[i] = arr[i][0];
        }
        for(int i=0; i<rows; i++){
            for(int j=0; j<cols-1; j++){
                arr[i][j] = arr[i][j+1];
            }
        }
        int firstVal = firstCol[0];
        for(int i=0; i<rows-1; i++)
            arr[i][cols-1] = firstCol[i+1];
        arr[rows-1][cols-1] = firstVal;
        
    }
----------------------------------------------------------------------------------------------
20)
        1 
      1 2 1 
    1 2 3 2 1 
  1 2 3 4 3 2 1 
1 2 3 4 5 4 3 2 1 

public static void one2one(int val){
        for(int i=1; i<=val; i++){
            for(int j=1;j<=val-i; j++){
                System.out.print("  ");
            }
            for(int j=1; j<=i; j++){
                System.out.print(j+" " );
            }
            for(int j=i-1; j>0 ; j--){
                System.out.print(j+" ");
            }
            System.out.println();
        }
    }
        5 
      5 4 5 
    5 4 3 4 5 
  5 4 3 2 3 4 5 
5 4 3 2 1 2 3 4 5 
public static void one2one(int val){
        for(int i=1; i<=val; i++){
            for(int j=1;j<=val-i; j++){
                System.out.print("  ");
            }
            for(int j=val; j>val-i; j--){
                System.out.print(j+" " );
            }
            for(int j=val-i + 2; j<=val ; j++){
                System.out.print(j+" ");
            }
            System.out.println();
        }
    }

 21)
       5 
      4 5 4 
    3 4 5 4 3 
  2 3 4 5 4 3 2 
1 2 3 4 5 4 3 2 1 
public static void one2one(int val){
        for(int i=1; i<=val; i++){
            for(int j=1;j<=val-i; j++){
                System.out.print("  ");
            }
            for(int j=val+1-i; j<=val; j++){
                System.out.print(j+" " );
            }
            for (int j = 1; j <= i-1; j++) {
                System.out.print(val-j+" ");
            }
            System.out.println();
        }
    }

22)
* * * * * * 
 * * * * * 
  * * * * 
   * * * 
    * * 
     * 
public static void invertedPyramidStar(int n){
        for(int i=n;i>=1; i--){
            for(int j=n-i; j>0; j--){
                System.out.print(" ");
            }
            for(int j=i; j>0; j--){
                System.out.print("* ");
            }
            System.out.println();
        }
    }
----------------------------------------------------------------------------------------------
23)
6 6 6 6 6 6 
 5 5 5 5 5 
  4 4 4 4 
   3 3 3 
    2 2 
     1 

 public static void invertedPyramidStar(int n){
        for(int i=n;i>=1; i--){
            for(int j=n-i; j>0; j--){
                System.out.print(" ");
            }
            for(int j=i; j>0; j--){
                System.out.print(i+" ");
            }
            System.out.println();
        }
    }
----------------------------------------------------------------------------------------------
24)
Write a program to make such a pattern like a pyramid with numbers increased by 1. 
Eg: Input : 10 
Output: 
     1  
    2 3  
  4 5 6  
7 8 9 10 

public static void pyramidNumbers(int n){
        int val=1;
        int rows=0;
        while(rows*(rows+1)/2 < n){
            rows++;
        }
        for(int i=1; i<=rows; i++){
            for(int j=rows-i;j>0;j--){
                System.out.print(" ");
            }
            for(int j=0; j<i&&val<=n; j++){
                
                System.out.print(val++ +" ");
            }
            System.out.println();
        }
        
    }
----------------------------------------------------------------------------------------------
25) Write a program to print the following output for the given input. You can assume 
the string is of odd length 
Eg 1: Input: 12345
       Output:
 1       5
  2   4
    3
  2   4
 1        5 

 public static void xWithString(String str){
        for(int i=0; i < str.length()/2; i++){
            for(int j=1; j <= i; j++){
                System.out.print(" ");
            }
            System.out.print(str.charAt(i));
            for(int j=i+1; j < str.length() - i; j++){
                System.out.print(" ");
            }
            System.out.print(str.charAt(str.length()-1-i));
            System.out.println();
        }
        for(int i=0; i<str.length()/2; i++){
            System.out.print(" ");
        }
        System.out.print(str.charAt(str.length()/2));
        System.out.println();
        for(int i=str.length()/2-1; i >= 0 ; i--){
            for(int j=0; j<i; j++){
                System.out.print(" ");
            }
            System.out.print(str.charAt(i));
            for(int j=i+1; j < str.length() - i; j++){
                System.out.print(" ");
            }
            System.out.print(str.charAt(str.length()-1-i));
            System.out.println();
        }
        
        
    }
----------------------------------------------------------------------------------------------
26)
Write a program to print the following pattern for the given input number. 
Eg 1: Input: 4
       Output:  
******** 
***__***
 **____**
 *______*
 **____**
 ***__***
 ********

 for(int i=1; i <=n; i++){
            for(int j=1; j<=n-i+1; j++)
                System.out.print("*");
            
            for(int j=1; j<=i-1; j++)
                System.out.print("__");
        
            for(int j=1; j<=n-i+1; j++)
                System.out.print("*");
            System.out.println();
        }
        for(int i=2; i <=n; i++){
            for(int j=1; j<=i; j++)
                System.out.print("*");
            
            for(int j=1; j<=n-i; j++)
                System.out.print("__");
        
            for(int j=1; j<=i; j++)
                System.out.print("*");
            System.out.println();
        }
----------------------------------------------------------------------------------------------
27)
Find if a String2 is substring of String1. If it is, return the index of the first 
occurrence. else return -1. 
Eg 1: Input: String 1: test123string
         String 2: 123
        Output: 4
 Eg 2: Input: String 1: testing12
        String 2: 1234 
        Output: -1

public static int stringFind(String str1, String str2){
        int str1Len = str1.length();
        int str2Len = str2.length();
        for (int i = 0; i <= str1Len - str2Len; i++) {
            int j;
            for (j = 0; j < str2Len; j++) 
                if (str1.charAt(i + j) != str2.charAt(j)) 
                    break; 
            if (j == str2Len) 
                return i; 
              
        }
        return -1;
    }
----------------------------------------------------------------------------------------------
28) Write a program to find the sum of the series. The series will be like 1 +11 + 111 + 
1111 +.. n terms.  
Eg 1: Input: Input the number of terms : 5 
Output :  
1 + 11 + 111 + 1111 + 11111 
The Sum is : 12345 
 
 Eg 2: Input: Input the number of terms : 3
  Output :
 1 + 11 + 111
 The Sum is : 123

public static int get1SeriesSum(int n){
        int sum = 0, num = 1; 

        for (int i = 0; i < n; i++) {
            sum += num; 
            num = num * 10 + 1; 
        }

        return sum;     
    }
----------------------------------------------------------------------------------------------
29) Write a program to print the alphabet 'C' with the stars based on the given numbers 
Eg 1: Input: 4
       Output:
 
 
****
* 
* 
****
 
public static void printC(int n) {
   for (int i = 0; i < n; i++) 
       System.out.print("*");
   System.out.println();

   for (int i = 1; i < n - 1; i++) {
        System.out.print("*");
        System.out.println();
   }

   for (int i = 0; i < n; i++) 
        System.out.print("*");
   System.out.println();
 }
----------------------------------------------------------------------------------------------
30)
public static List<List<Integer>> diagonalReturn(int[][] arr){
        int rows = arr.length;
        int cols = arr[0].length;
        List<List<Integer>> result = new ArrayList();
        
        int index=0;
        for(int i=0; i< rows; i++){
            for(int j=0; j<cols; j++){
                index=i+j;
                if (index >= result.size()) {
                    result.add(new ArrayList<>());
                }
                result.get(index).add(arr[i][j]);
            }
        }
        
        return result;     
    }
    public static void printArray(List<List<Integer>> array) {
        System.out.println("[");
        for(List<Integer> diagonal:array){
            System.out.println(diagonal);
        }
        System.out.println("]");
    }

